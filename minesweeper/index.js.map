{"version":3,"file":"index.js","mappings":"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","sources":["webpack://minesweeper/webpack/bootstrap","webpack://minesweeper/webpack/runtime/define property getters","webpack://minesweeper/webpack/runtime/hasOwnProperty shorthand","webpack://minesweeper/./src/modules/modal.js","webpack://minesweeper/./src/modules/timer.js","webpack://minesweeper/./src/modules/newGame.js","webpack://minesweeper/./src/modules/createElement.js","webpack://minesweeper/./src/index.js","webpack://minesweeper/./src/modules/app.js","webpack://minesweeper/./src/modules/createHtml.js"],"sourcesContent":["// The require scope\nvar __webpack_require__ = {};\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","import { app } from \"..\";\r\nclass Modal {\r\n  constructor() {\r\n    this.modal = document.querySelector(\".modal\");\r\n    this.text = this.modal.querySelector(\".modal__text\");\r\n    this.seconds = Number(\r\n      document.querySelector(\".counter__time\").textContent.split(\" \")[1]\r\n    );\r\n    this.moves = Number(\r\n      document.querySelector(\".counter__moves\").textContent.split(\" \")[1]\r\n    );\r\n  }\r\n\r\n  open(win) {\r\n    this.modal.style.display = \"block\";\r\n    this.modal.querySelector(\".modal__close\").addEventListener(\"click\", () => {\r\n      this.close();\r\n      app.newGame();\r\n    });\r\n    window.addEventListener(\"click\", (event) => {\r\n      if (event.target == this.modal) {\r\n        this.close();\r\n        app.newGame();\r\n      }\r\n    });\r\n\r\n    if (win === true) {\r\n      this.text.textContent = `Hooray! You found all mines in ${this.seconds} seconds and ${this.moves} moves!`;\r\n    } else {\r\n      this.text.textContent = `Game over. Try again`;\r\n    }\r\n  }\r\n\r\n  close() {\r\n    this.modal.style.display = \"none\";\r\n  }\r\n}\r\n\r\nexport { Modal };\r\n","class Timer {\r\n  constructor(elTime) {\r\n    this.counter = elTime;\r\n    this.sec = 0;\r\n    this.timerId = null;\r\n  }\r\n\r\n  start() {\r\n    if (this.timerId) {\r\n      return;\r\n    }\r\n\r\n    this.timerId = setInterval(() => {\r\n      this.sec++;\r\n      this.addText();\r\n    }, 1000);\r\n    console.log(\"Timer Start!\");\r\n  }\r\n\r\n  addText() {\r\n    this.counter.textContent = `Time: ${\r\n      this.sec > 99\r\n        ? this.sec\r\n        : \"0\" + (this.sec > 9 ? this.sec : \"0\" + this.sec)\r\n    }`;\r\n  }\r\n\r\n  stop() {\r\n    console.log(\"Timer Stop!\");\r\n    this.sec = 0;\r\n    clearInterval(this.timerId);\r\n    this.timerId = null;\r\n    this.addText();\r\n  }\r\n}\r\n\r\nexport { Timer };\r\n","import { app } from \"..\";\r\nimport { Modal } from \"./modal\";\r\nimport { Timer } from \"./timer\";\r\n\r\nclass NewGame {\r\n  constructor(width, bombAmount) {\r\n    this.grid = document.querySelector(\".grid\");\r\n    this.width = width;\r\n    this.bombAmount = bombAmount;\r\n    this.squares = [];\r\n    this.flags = 0;\r\n    this.isGameOver = false;\r\n    this.win = false;\r\n    this.timer = new Timer(document.querySelector(\".counter__time\"));\r\n    this.moves = document.querySelector(\".counter__moves\");\r\n    this.countMove = 0;\r\n  }\r\n\r\n  start() {\r\n    this.grid.innerHTML = \"\";\r\n    this.countMove = 0;\r\n    this.moves.textContent = `Moves: ${this.countMove}`;\r\n    this.createBoard();\r\n  }\r\n\r\n  createBoard() {\r\n    //get shuffled game array with random bombs\r\n    // const bombsArray = Array(this.bombAmount).fill(\"cell_bomb\");\r\n    // const emptyArray = Array(this.width * this.width - this.bombAmount).fill(\r\n    //   \"cell_empty\"\r\n    // );\r\n    // const gameArray = emptyArray.concat(bombsArray);\r\n    // const shuffledArray = gameArray.sort(() => Math.random() - 0.5);\r\n\r\n    const emptyArray = Array(this.width * this.width).fill(\"cell_empty\");\r\n\r\n    for (let i = 0; i < this.width * this.width; i++) {\r\n      const square = document.createElement(\"div\");\r\n      square.classList.add(\"grid__cell\");\r\n      square.setAttribute(\"id\", i);\r\n      square.classList.add(emptyArray[i]);\r\n      this.grid.appendChild(square);\r\n      this.squares.push(square);\r\n\r\n      // normal click\r\n      square.addEventListener(\"click\", (e) => {\r\n        if (this.countMove === 0) {\r\n          this.addBombs(e.target.id);\r\n          this.addMove();\r\n          this.addNumbers();\r\n          e.target.click();\r\n          return;\r\n        }\r\n        this.click(square);\r\n        this.addMove();\r\n        if (!this.isGameOver) {\r\n          this.timer.start();\r\n        }\r\n      });\r\n\r\n      // right click\r\n      square.oncontextmenu = (e) => {\r\n        e.preventDefault();\r\n        this.addFlag(square);\r\n        if (!this.isGameOver) {\r\n          this.timer.start();\r\n        }\r\n      };\r\n    }\r\n    this.addNumbers();\r\n  }\r\n\r\n  addNumbers() {\r\n    for (let i = 0; i < this.squares.length; i++) {\r\n      let total = 0;\r\n      const isLeftEdge = i % this.width === 0;\r\n      const isRightEdge = i % this.width === this.width - 1;\r\n\r\n      if (this.squares[i].classList.contains(\"cell_empty\")) {\r\n        if (\r\n          i > 0 &&\r\n          !isLeftEdge &&\r\n          this.squares[i - 1].classList.contains(\"cell_bomb\")\r\n        ) {\r\n          total++;\r\n        }\r\n        if (\r\n          i > 9 &&\r\n          !isRightEdge &&\r\n          this.squares[i + 1 - this.width].classList.contains(\"cell_bomb\")\r\n        ) {\r\n          total++;\r\n        }\r\n        if (\r\n          i > 10 &&\r\n          this.squares[i - this.width].classList.contains(\"cell_bomb\")\r\n        ) {\r\n          total++;\r\n        }\r\n        if (\r\n          i > 11 &&\r\n          !isLeftEdge &&\r\n          this.squares[i - 1 - this.width].classList.contains(\"cell_bomb\")\r\n        ) {\r\n          total++;\r\n        }\r\n        if (\r\n          i < 99 &&\r\n          !isRightEdge &&\r\n          this.squares[i + 1].classList.contains(\"cell_bomb\")\r\n        ) {\r\n          total++;\r\n        }\r\n        if (\r\n          i < 90 &&\r\n          !isLeftEdge &&\r\n          this.squares[i - 1 + this.width].classList.contains(\"cell_bomb\")\r\n        ) {\r\n          total++;\r\n        }\r\n        if (\r\n          i <= 88 &&\r\n          !isRightEdge &&\r\n          this.squares[i + 1 + this.width].classList.contains(\"cell_bomb\")\r\n        ) {\r\n          total++;\r\n        }\r\n        if (\r\n          i <= 89 &&\r\n          this.squares[i + this.width].classList.contains(\"cell_bomb\")\r\n        ) {\r\n          total++;\r\n        }\r\n        this.squares[i].setAttribute(\"data\", total);\r\n      }\r\n    }\r\n  }\r\n\r\n  addFlag(square) {\r\n    if (this.isGameOver) return;\r\n    if (\r\n      !square.classList.contains(\"cell_checked\") &&\r\n      this.flags < this.bombAmount\r\n    ) {\r\n      if (!square.classList.contains(\"cell_flag\")) {\r\n        square.classList.add(\"cell_flag\");\r\n        square.innerHTML = \"F\";\r\n        this.flags++;\r\n        this.checkForWin();\r\n      } else {\r\n        square.classList.remove(\"cell_flag\");\r\n        square.innerHTML = \"\";\r\n        this.flags--;\r\n      }\r\n    }\r\n  }\r\n\r\n  click(square) {\r\n    let currentId = square.id;\r\n    if (this.isGameOver) return;\r\n    if (\r\n      square.classList.contains(\"cell_checked\") ||\r\n      square.classList.contains(\"cell_flag\")\r\n    )\r\n      return;\r\n    if (square.classList.contains(\"cell_bomb\")) {\r\n      this.gameOver(square);\r\n    } else {\r\n      let total = square.getAttribute(\"data\");\r\n      if (total != 0) {\r\n        square.classList.add(\"cell_checked\");\r\n        square.innerHTML = total;\r\n        this.checkForWin();\r\n        return;\r\n      }\r\n      // if (this.countMove === 0) {\r\n      //   this.addBombs();\r\n      //   return\r\n      // }\r\n      this.checkSquare(currentId);\r\n    }\r\n    square.classList.add(\"cell_checked\");\r\n  }\r\n\r\n  addBombs(id) {\r\n    // get shuffled game array with random bombs\r\n\r\n    const createShuffledArray = (id) => {\r\n      const bombsArray = Array(this.bombAmount).fill(\"cell_bomb\");\r\n      const emptyArray = Array(this.width * this.width - this.bombAmount).fill(\r\n        \"cell_empty\"\r\n      );\r\n      const gameArray = emptyArray.concat(bombsArray);\r\n      const shuffledArray = gameArray.sort(() => Math.random() - 0.5);\r\n      if (shuffledArray[id] === \"cell_bomb\") {\r\n        return createShuffledArray(id);\r\n      } else {\r\n        return shuffledArray;\r\n      }\r\n    };\r\n    const shuffledArray = createShuffledArray(id);\r\n    console.log(shuffledArray);\r\n\r\n    for (let i = 0; i < this.squares.length; i++) {\r\n      this.squares[i].classList.add(shuffledArray[i]);\r\n    }\r\n  }\r\n\r\n  checkSquare(currentId) {\r\n    const isLeftEdge = currentId % this.width === 0;\r\n    const isRightEdge = currentId % this.width === this.width - 1;\r\n\r\n    const clickNewSquare = (newId) => {\r\n      const newSquare = document.getElementById(newId);\r\n      this.click(newSquare);\r\n    };\r\n\r\n    setTimeout(() => {\r\n      if (currentId > 0 && !isLeftEdge) {\r\n        const newId = Number(currentId) - 1;\r\n        clickNewSquare(newId);\r\n      }\r\n      if (currentId > 9 && !isRightEdge) {\r\n        const newId = Number(currentId) + 1 - this.width;\r\n        clickNewSquare(newId);\r\n      }\r\n      if (currentId > 10) {\r\n        const newId = Number(currentId) - this.width;\r\n        clickNewSquare(newId);\r\n      }\r\n      if (currentId > 11 && !isLeftEdge) {\r\n        const newId = Number(currentId) - 1 - this.width;\r\n        clickNewSquare(newId);\r\n      }\r\n      if (currentId < 99 && !isRightEdge) {\r\n        const newId = Number(currentId) + 1;\r\n        clickNewSquare(newId);\r\n      }\r\n      if (currentId < 90 && !isLeftEdge) {\r\n        const newId = Number(currentId) - 1 + this.width;\r\n        clickNewSquare(newId);\r\n      }\r\n      if (currentId < 88 && !isRightEdge) {\r\n        const newId = Number(currentId) + 1 + this.width;\r\n        clickNewSquare(newId);\r\n      }\r\n      if (currentId < 89) {\r\n        const newId = Number(currentId) + this.width;\r\n        clickNewSquare(newId);\r\n      }\r\n    }, 10);\r\n  }\r\n\r\n  gameOver(square) {\r\n    this.isGameOver = true;\r\n    const modal = new Modal();\r\n    modal.open(this.win);\r\n    this.timer.stop();\r\n\r\n    // show ALL the bombs\r\n    this.squares.forEach((square) => {\r\n      if (square.classList.contains(\"cell_bomb\")) {\r\n        square.innerHTML = \"B\";\r\n        square.style.backgroundColor = \"red\";\r\n      }\r\n    });\r\n  }\r\n\r\n  checkForWin() {\r\n    let matches = 0;\r\n    let checked = 0;\r\n    for (let i = 0; i < this.squares.length; i++) {\r\n      if (\r\n        this.squares[i].classList.contains(\"cell_flag\") &&\r\n        this.squares[i].classList.contains(\"cell_bomb\")\r\n      ) {\r\n        matches++;\r\n      }\r\n      if (this.squares[i].classList.contains(\"cell_checked\")) {\r\n        checked++;\r\n      }\r\n      if (\r\n        matches === this.bombAmount ||\r\n        checked === this.squares.length - this.bombAmount\r\n      ) {\r\n        this.isGameOver = true;\r\n        this.win = true;\r\n        const modal = new Modal();\r\n        modal.open(this.win);\r\n        this.timer.stop();\r\n      }\r\n    }\r\n  }\r\n\r\n  addMove() {\r\n    this.countMove++;\r\n    this.moves.textContent = `Moves: ${this.countMove}`;\r\n  }\r\n}\r\n\r\nexport { NewGame };\r\n","const createElement = (element, selector) => {\r\n  const elem = document.createElement(element);\r\n  elem.classList.add(selector);\r\n  return elem;\r\n};\r\n\r\nexport { createElement };\r\n","import \"./index.html\";\r\nimport \"./style.scss\";\r\nimport { App } from \"./modules/app\";\r\n\r\nconst body = document.querySelector(\"body\");\r\nconst app = new App(body);\r\napp.render();\r\napp.newGame();\r\n\r\nexport { app };","import { NewGame } from \"./newGame\";\r\nimport { createHtml } from \"./createHtml\";\r\n\r\nclass App {\r\n  constructor(body) {\r\n    this.body = body;\r\n    this.width = 10;\r\n    this.bombAmount = 10;\r\n  }\r\n\r\n  render() {\r\n    createHtml(this.body);\r\n  }\r\n\r\n  newGame() {\r\n    const newGame = new NewGame(this.width, this.bombAmount);\r\n    newGame.start();\r\n  }\r\n}\r\n\r\nexport { App };\r\n","import { createElement } from \"./createElement\";\r\n\r\nconst createHtml = (body) => {\r\n  const header = createElement(\"header\", \"header\");\r\n  body.append(header);\r\n\r\n  const title = createElement(\"h1\", \"title\");\r\n  title.textContent = \"Minesweeper\";\r\n  header.append(title);\r\n\r\n  const counter = createElement(\"div\", \"counter\");\r\n  header.append(counter);\r\n\r\n  const time = createElement(\"div\", \"counter__time\");\r\n  time.textContent = \"Time: 000\";\r\n  counter.append(time);\r\n\r\n  const moves = createElement(\"div\", \"counter__moves\");\r\n  moves.textContent = \"Moves: 0\";\r\n  counter.append(moves);\r\n\r\n  const main = createElement(\"main\", \"main\");\r\n  body.append(main);\r\n\r\n  const grid = createElement(\"div\", \"grid\");\r\n  main.append(grid);\r\n\r\n  const modal = createElement(\"div\", \"modal\");\r\n  main.append(modal);\r\n\r\n  const modalContent = createElement(\"div\", \"modal__content\");\r\n  modal.append(modalContent);\r\n\r\n  const modalText = createElement(\"p\", \"modal__text\");\r\n  modalText.textContent =\r\n    \"Hooray! You found all mines in ## seconds and N moves!\";\r\n  modalContent.append(modalText);\r\n\r\n  const modalClose = createElement(\"span\", \"modal__close\");\r\n  modalClose.textContent = \"close\";\r\n  modalContent.append(modalClose);\r\n};\r\n\r\nexport { createHtml };\r\n"],"names":["__webpack_require__","exports","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","Modal","constructor","this","modal","document","querySelector","text","seconds","Number","textContent","split","moves","open","win","style","display","addEventListener","close","app","newGame","window","event","target","Timer","elTime","counter","sec","timerId","start","setInterval","addText","console","log","stop","clearInterval","NewGame","width","bombAmount","grid","squares","flags","isGameOver","timer","countMove","innerHTML","createBoard","emptyArray","Array","fill","i","square","createElement","classList","add","setAttribute","appendChild","push","e","addBombs","id","addMove","addNumbers","click","oncontextmenu","preventDefault","addFlag","length","total","isLeftEdge","isRightEdge","contains","remove","checkForWin","currentId","gameOver","getAttribute","checkSquare","createShuffledArray","bombsArray","shuffledArray","concat","sort","Math","random","clickNewSquare","newId","newSquare","getElementById","setTimeout","forEach","backgroundColor","matches","checked","element","selector","elem","body","render","header","append","title","time","main","modalContent","modalText","modalClose","createHtml"],"sourceRoot":""}